[
  {
    "id": "freebayes",
    "category": "variant detection",
    "options": {
      "Input and Output": {
        "--region": {
          "description": "Limit analysis to the specified region, 0-base coordinates, end_position included.  Either '-' or '..' may be used as a separator.",
          "type": "string"
        },
        "--only-use-input-alleles": {
          "description": "Only provide variant calls and genotype likelihoods for sites and alleles which are provided in the VCF input, and provide output in the VCF for all input alleles, not just those which have support in the data.",
          "type": "flag"
        },
        "--report-all-haplotype-alleles": {
          "description": "At sites where genotypes are made over haplotype alleles, provide information about all alleles in output, not only those which are called.",
          "type": "flag"
        }
      },
      "Reporting": {
        "--pvar": {
          "description": "Report sites if the probability that there is a polymorphism at the site is greater than N.  default: 0.0.  Note that post-filtering is generally recommended over the use of this parameter.",
          "type": "float"
        }
      },
      "Population Model": {
        "--theta": {
          "description": "The expected mutation rate or pairwise nucleotide diversity among the population under analysis.  This serves as the single parameter to the Ewens Sampling Formula prior model",
          "default": "0.001",
          "type": "float"
        },
        "--ploidy": {
          "description": "Sets the default ploidy for the analysis to N.",
          "default": "2",
          "type": "integer"
        },
        "--pooled-discrete": {
          "description": "Assume that samples result from pooled sequencing. Model pooled samples using discrete genotypes across pools. When using this flag, set --ploidy to the number of alleles in each sample or use the --cnv-map to define per-sample ploidy.",
          "type": "flag"
        },
        "--pooled-continuous": {
          "description": "Output all alleles which pass input filters, regardless of genotyping outcome or model.",
          "type": "flag"
        }
      },
      "Reference Allele": {
        "--use-reference-allele": {
          "description": "This flag includes the reference allele in the analysis as if it is another sample from the same population.",
          "type": "flag"
        },
        "--reference-quality": {
          "description": "Assign mapping quality of MQ to the reference allele at each site and base quality of BQ.",
          "default": "100,60",
          "type": "string"
        }
      },
      "Allele Scope": {
        "--no-snps": {
          "description": "Ignore SNP alleles.",
          "type": "flag"
        },
        "--no-indels": {
          "description": "Ignore insertion and deletion alleles.",
          "type": "flag"
        },
        "--no-mnps": {
          "description": "Ignore multi-nuceotide polymorphisms, MNPs.",
          "type": "flag"
        },
        "--no-complex": {
          "description": "Ignore complex events (composites of other classes).",
          "type": "flag"
        },
        "--use-best-n-alleles": {
          "description": "Evaluate only the best N SNP alleles, ranked by sum of supporting quality scores.  (Set to 0 to use all)",
          "default": "all",
          "type": "integer"
        },
        "--max-complex-gap": {
          "description": "",
          "type": "integer"
        },
        "--haplotype-length": {
          "description": "Allow haplotype calls with contiguous embedded matches of up to this length.",
          "type": "integer"
        },
        "--min-repeat-length": {
          "description": "When assembling observations across repeats, require the total repeat length at least this many bp.",
          "default": "5",
          "type": "integer"
        },
        "--min-repeat-entropy": {
          "description": "To detect interrupted repeats, build across sequence until it has entropy > N bits per bp.",
          "default": "0",
          "type": "integer"
        },
        "--no-partial-obvservations": {
          "description": "Exclude observations which do not fully span the dynamically-determined detection window.",
          "type": "flag"
        }
      },
      "Indel Realignment": {
        "--dont-left-align-indels": {
          "description": "Turn off left-alignment of indels, which is enabled by default.",
          "type": "flag"
        }
      },
      "Input Filters": {
        "--use-duplicate-reads": {
          "description": "Include duplicate-marked alignments in the analysis.",
          "type": "flag"
        },
        "--min-mapping-quality": {
          "description": "Exclude alignments from analysis if they have a mapping quality less than Q.",
          "default": "0",
          "type": "integer"
        },
        "--min-base-quality": {
          "description": "Exclude alleles from analysis if their supporting base quality is less than Q.",
          "default": "0",
          "type": "integer"
        },
        "--min-supporting-allele-qsum": {
          "description": "Consider any allele in which the sum of qualities of supporting observations is at least Q.",
          "default": "0",
          "type": "integer"
        },
        "--min-supporting-mapping-qsum": {
          "description": "Consider any allele in which and the sum of mapping qualities of supporting reads is at least Q.",
          "default": "0",
          "type": "integer"
        },
        "--mismatch-base-quality-threshold": {
          "description": "Count mismatches toward --read-mismatch-limit if the base quality of the mismatch is >= Q.  default: 10",
          "default": "10",
          "type": "integer"
        },
        "--read-mismatch-limit": {
          "description": "Exclude reads with more than N mismatches where each mismatch has base quality >= mismatch-base-quality-threshold.",
          "default": "unbounded",
          "type": "integer"
        },
        "--read-max-mismatch-fraction": {
          "description": "Exclude reads with more than N [0,1] fraction of mismatches where each mismatch has base quality >= mismatch-base-quality-threshold",
          "default": "1.0",
          "type": "float"
        },
        "--read-snp-limit": {
          "description": "Exclude reads with more than N base mismatches, ignoring gaps with quality >= mismatch-base-quality-threshold.",
          "default": "unbounded",
          "type": "integer"
        },
        "--read-indel-limit": {
          "description": "Exclude reads with more than N separate gaps.",
          "default": "unbounded",
          "type": "integer"
        },
        "--standard-filters": {
          "description": "Use stringent input base and mapping quality filters. Equivalent to -m 30 -q 20 -R 0 -S 0.",
          "type": "flag"
        },
        "--min-alternate-fraction": {
          "description": "Require at least this fraction of observations supporting an alternate allele within a single individual in the in order to evaluate the position.",
          "default": "0.2",
          "type": "float"
        },
        "--min-alternate-count": {
          "description": "Require at least this count of observations supporting an alternate allele within a single individual in order to evaluate the position.",
          "default": "2",
          "type": "integer"
        },
        "--min-alternate-qsum": {
          "description": "Require at least this sum of quality of observations supporting an alternate allele within a single individual in order to evaluate the position.",
          "default": "0",
          "type": "integer"
        },
        "--min-alternate-total": {
          "description": "Require at least this count of observations supporting an alternate allele within the total population in order to use the allele in analysis.",
          "default": "1",
          "type": "integer"
        },
        "--min-coverage": {
          "description": "Require at least this coverage to process a site.",
          "default": "0",
          "type": "integer"
        }
      },
      "Population Priors": {
        "--no-population-priors": {
          "description": "",
          "type": "flag"
        }
      },
      "Mappability Priors": {
        "--hwe-priors-off": {
          "description": "Disable estimation of the probability of the combination arising under HWE given the allele frequency as estimated by observation frequency.",
          "type": "flag"
        },
        "--binomial-obs-priors-off": {
          "description": "Disable incorporation of prior expectations about observations. Uses read placement probability, strand balance probability, and read position (5'-3') probability.",
          "type": "flag"
        },
        "--allele-balance-priors-off": {
          "description": "Disable use of aggregate probability of observation balance between alleles as a component of the priors.",
          "type": "flag"
        }
      },
      "Genotype Likelihoods": {
        "--standard-gls": {
          "description": "Use legacy model to generate genotype likelihoods.",
          "type": "flag"
        },
        "--base-quality-cap": {
          "description": "Limit estimated observation quality by capping base quality at Q.",
          "type": "integer"
        },
        "--prob-contamination": {
          "description": "An estimate of contamination to use for all samples.",
          "default": "0",
          "type": "float"
        }
      },
      "Algorithmic Features": {
        "--report-genotype-likelihood-max": {
          "description": "Report genotypes using the maximum-likelihood estimate provided from genotype likelihoods.",
          "type": "flag"
        },
        "--genotyping-max-iterations": {
          "description": "Iterate no more than N times during genotyping step.",
          "default": "1000",
          "type": "integer"
        },
        "--genotyping-max-banddepth": {
          "description": "Integrate no deeper than the Nth best genotype by likelihood when genotyping.",
          "default": "6",
          "type": "integer"
        },
        "--posterior-integration-limits": {
          "description": "Integrate all genotype combinations in our posterior space which include no more than N samples with their Mth best data likelihood. default: 1,3.",
          "type": "string"
        },
        "--exclude-unobserved-genotypes": {
          "description": "Skip sample genotypings for which the sample has no supporting reads.",
          "type": "flag"
        },
        "--genotype-variant-threshold": {
          "description": "Limit posterior integration to samples where the second-best genotype likelihood is no more than log(N) from the highest genotype likelihood for the sample.",
          "type": "float"
        },
        "--use-mapping-quality": {
          "description": "Use mapping quality of alleles when calculating data likelihoods.",
          "type": "flag"
        },
        "--harmonic-indel-quality": {
          "description": "Use a weighted sum of base qualities around an indel, scaled by the distance from the indel.  By default use a minimum BQ in flanking sequence.",
          "type": "flag"
        },
        "--read-dependence-factor": {
          "description": "Incorporate non-independence of reads by scaling successive observations by this factor during data likelihood calculations.",
          "default": "0.9",
          "type": "float"
        },
        "--genotype-qualities": {
          "description": "Calculate the marginal probability of genotypes and report as GQ in each sample field in the VCF output.",
          "type": "flag"
        }
      }
    },
    "inputs": {
      "--bam": {
        "formats_whitelist": ["bam"],
        "required": true,
        "accepts_multiple": true
      },
      "--fasta-reference": {
        "formats_whitelist": ["fasta", "fa"],
        "required": true,
        "suggestable": false
      },
      "--fasta-reference-index": {
        "formats_whitelist": ["fai"],
        "suggestable": false
      },
      "--targets": {
        "formats_whitelist": ["bed"],
        "suggestable": false
      },
      "--samples": {
        "suggestable": false
      },
      "--populations": {
        "suggestable": false
      },
      "--cnv-map": {
        "formats_whitelist": ["bed"],
        "suggestable": false
      },
      "--variant-input": {
        "formats_whitelist": ["vcf", "vcf.gz"],
        "suggestable": false
      },
      "--haplotype-basis-alleles": {
        "formats_whitelist": ["vcf", "vcf.gz"],
        "suggestable": false
      },
      "--observation-bias": {
        "suggestable": false
      },
      "--contamination-estimates": {
        "suggestable": false
      }
    },
    "outputs": {
      "--out": {
        "available_formats": ["vcf"]
      },
      "--trace": {
        "available_formats": ["txt"],
        "conditional": true
      },
      "--failed-alleles": {
        "available_formats": ["bed"],
        "conditional": true
      }
    }
  }
]